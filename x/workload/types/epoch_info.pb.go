// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: enreach/workload/epoch_info.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EpochInfo struct {
	Number     uint64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	StartTime  time.Time `protobuf:"bytes,2,opt,name=startTime,proto3,stdtime" json:"startTime"`
	StartBlock uint64    `protobuf:"varint,3,opt,name=startBlock,proto3" json:"startBlock,omitempty"`
	EndTime    time.Time `protobuf:"bytes,4,opt,name=endTime,proto3,stdtime" json:"endTime"`
	EndBlock   uint64    `protobuf:"varint,5,opt,name=endBlock,proto3" json:"endBlock,omitempty"`
}

func (m *EpochInfo) Reset()         { *m = EpochInfo{} }
func (m *EpochInfo) String() string { return proto.CompactTextString(m) }
func (*EpochInfo) ProtoMessage()    {}
func (*EpochInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5c03a82353ae382, []int{0}
}
func (m *EpochInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EpochInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EpochInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EpochInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochInfo.Merge(m, src)
}
func (m *EpochInfo) XXX_Size() int {
	return m.Size()
}
func (m *EpochInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EpochInfo proto.InternalMessageInfo

func (m *EpochInfo) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *EpochInfo) GetStartTime() time.Time {
	if m != nil {
		return m.StartTime
	}
	return time.Time{}
}

func (m *EpochInfo) GetStartBlock() uint64 {
	if m != nil {
		return m.StartBlock
	}
	return 0
}

func (m *EpochInfo) GetEndTime() time.Time {
	if m != nil {
		return m.EndTime
	}
	return time.Time{}
}

func (m *EpochInfo) GetEndBlock() uint64 {
	if m != nil {
		return m.EndBlock
	}
	return 0
}

func init() {
	proto.RegisterType((*EpochInfo)(nil), "enreach.workload.EpochInfo")
}

func init() { proto.RegisterFile("enreach/workload/epoch_info.proto", fileDescriptor_d5c03a82353ae382) }

var fileDescriptor_d5c03a82353ae382 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x63, 0x28, 0xa5, 0x35, 0x0b, 0xb2, 0x10, 0x8a, 0x32, 0x38, 0x85, 0xa9, 0x53, 0x2c,
	0x95, 0x9d, 0x21, 0x12, 0x03, 0x6b, 0xd5, 0x89, 0x05, 0xe5, 0xcf, 0x25, 0x8d, 0x9a, 0xf8, 0x22,
	0xc7, 0x15, 0xf0, 0x2d, 0xfa, 0xb1, 0x3a, 0x76, 0x64, 0x02, 0x94, 0x7c, 0x11, 0x54, 0xa7, 0xa6,
	0xac, 0xdd, 0xee, 0xdd, 0xdd, 0x7b, 0x3f, 0xe9, 0xd1, 0x3b, 0x90, 0x0a, 0xa2, 0x64, 0x29, 0xde,
	0x50, 0xad, 0x4a, 0x8c, 0x52, 0x01, 0x35, 0x26, 0xcb, 0xd7, 0x42, 0x66, 0x18, 0xd4, 0x0a, 0x35,
	0xb2, 0xeb, 0xc3, 0x4b, 0x60, 0x5f, 0x3c, 0x3f, 0x47, 0xcc, 0x4b, 0x10, 0xe6, 0x1e, 0xaf, 0x33,
	0xa1, 0x8b, 0x0a, 0x1a, 0x1d, 0x55, 0x75, 0x6f, 0xf1, 0x6e, 0x72, 0xcc, 0xd1, 0x8c, 0x62, 0x3f,
	0xf5, 0xdb, 0xfb, 0x8e, 0xd0, 0xf1, 0xd3, 0x3e, 0xfd, 0x59, 0x66, 0xc8, 0x6e, 0xe9, 0x50, 0xae,
	0xab, 0x18, 0x94, 0x4b, 0x26, 0x64, 0x3a, 0x98, 0x1f, 0x14, 0x0b, 0xe9, 0xb8, 0xd1, 0x91, 0xd2,
	0x8b, 0xa2, 0x02, 0xf7, 0x6c, 0x42, 0xa6, 0x57, 0x33, 0x2f, 0xe8, 0x81, 0x81, 0x05, 0x06, 0x0b,
	0x0b, 0x0c, 0x47, 0xdb, 0x2f, 0xdf, 0xd9, 0x7c, 0xfb, 0x64, 0x7e, 0xb4, 0x31, 0x4e, 0xa9, 0x11,
	0x61, 0x89, 0xc9, 0xca, 0x3d, 0x37, 0xf9, 0xff, 0x36, 0xec, 0x91, 0x5e, 0x82, 0x4c, 0x0d, 0x61,
	0x70, 0x02, 0xc1, 0x9a, 0x98, 0x47, 0x47, 0x20, 0xd3, 0x3e, 0xfd, 0xc2, 0xa4, 0xff, 0xe9, 0x70,
	0xb6, 0x6d, 0x39, 0xd9, 0xb5, 0x9c, 0xfc, 0xb4, 0x9c, 0x6c, 0x3a, 0xee, 0xec, 0x3a, 0xee, 0x7c,
	0x76, 0xdc, 0x79, 0x71, 0x6d, 0xd7, 0xef, 0xc7, 0xb6, 0xf5, 0x47, 0x0d, 0x4d, 0x3c, 0x34, 0xd8,
	0x87, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x43, 0x04, 0xde, 0xdd, 0x8e, 0x01, 0x00, 0x00,
}

func (m *EpochInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EpochInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EpochInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EndBlock != 0 {
		i = encodeVarintEpochInfo(dAtA, i, uint64(m.EndBlock))
		i--
		dAtA[i] = 0x28
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.EndTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EndTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintEpochInfo(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	if m.StartBlock != 0 {
		i = encodeVarintEpochInfo(dAtA, i, uint64(m.StartBlock))
		i--
		dAtA[i] = 0x18
	}
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.StartTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StartTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintEpochInfo(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x12
	if m.Number != 0 {
		i = encodeVarintEpochInfo(dAtA, i, uint64(m.Number))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintEpochInfo(dAtA []byte, offset int, v uint64) int {
	offset -= sovEpochInfo(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EpochInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Number != 0 {
		n += 1 + sovEpochInfo(uint64(m.Number))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.StartTime)
	n += 1 + l + sovEpochInfo(uint64(l))
	if m.StartBlock != 0 {
		n += 1 + sovEpochInfo(uint64(m.StartBlock))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EndTime)
	n += 1 + l + sovEpochInfo(uint64(l))
	if m.EndBlock != 0 {
		n += 1 + sovEpochInfo(uint64(m.EndBlock))
	}
	return n
}

func sovEpochInfo(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEpochInfo(x uint64) (n int) {
	return sovEpochInfo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EpochInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEpochInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EpochInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EpochInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			m.Number = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Number |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEpochInfo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEpochInfo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.StartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
			}
			m.StartBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEpochInfo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEpochInfo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.EndTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndBlock", wireType)
			}
			m.EndBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEpochInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEpochInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEpochInfo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEpochInfo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEpochInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEpochInfo
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEpochInfo
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEpochInfo
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEpochInfo        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEpochInfo          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEpochInfo = fmt.Errorf("proto: unexpected end of group")
)
