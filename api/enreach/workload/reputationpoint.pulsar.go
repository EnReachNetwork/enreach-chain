// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package workload

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sort "sort"
	sync "sync"
)

var (
	md_ReputationPointChangeRawData            protoreflect.MessageDescriptor
	fd_ReputationPointChangeRawData_nodeID     protoreflect.FieldDescriptor
	fd_ReputationPointChangeRawData_deltaPoint protoreflect.FieldDescriptor
)

func init() {
	file_enreach_workload_reputationpoint_proto_init()
	md_ReputationPointChangeRawData = File_enreach_workload_reputationpoint_proto.Messages().ByName("ReputationPointChangeRawData")
	fd_ReputationPointChangeRawData_nodeID = md_ReputationPointChangeRawData.Fields().ByName("nodeID")
	fd_ReputationPointChangeRawData_deltaPoint = md_ReputationPointChangeRawData.Fields().ByName("deltaPoint")
}

var _ protoreflect.Message = (*fastReflection_ReputationPointChangeRawData)(nil)

type fastReflection_ReputationPointChangeRawData ReputationPointChangeRawData

func (x *ReputationPointChangeRawData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeRawData)(x)
}

func (x *ReputationPointChangeRawData) slowProtoReflect() protoreflect.Message {
	mi := &file_enreach_workload_reputationpoint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputationPointChangeRawData_messageType fastReflection_ReputationPointChangeRawData_messageType
var _ protoreflect.MessageType = fastReflection_ReputationPointChangeRawData_messageType{}

type fastReflection_ReputationPointChangeRawData_messageType struct{}

func (x fastReflection_ReputationPointChangeRawData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeRawData)(nil)
}
func (x fastReflection_ReputationPointChangeRawData_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeRawData)
}
func (x fastReflection_ReputationPointChangeRawData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeRawData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputationPointChangeRawData) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeRawData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputationPointChangeRawData) Type() protoreflect.MessageType {
	return _fastReflection_ReputationPointChangeRawData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputationPointChangeRawData) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeRawData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputationPointChangeRawData) Interface() protoreflect.ProtoMessage {
	return (*ReputationPointChangeRawData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputationPointChangeRawData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NodeID != "" {
		value := protoreflect.ValueOfString(x.NodeID)
		if !f(fd_ReputationPointChangeRawData_nodeID, value) {
			return
		}
	}
	if x.DeltaPoint != int64(0) {
		value := protoreflect.ValueOfInt64(x.DeltaPoint)
		if !f(fd_ReputationPointChangeRawData_deltaPoint, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputationPointChangeRawData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawData.nodeID":
		return x.NodeID != ""
	case "enreach.workload.ReputationPointChangeRawData.deltaPoint":
		return x.DeltaPoint != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawData.nodeID":
		x.NodeID = ""
	case "enreach.workload.ReputationPointChangeRawData.deltaPoint":
		x.DeltaPoint = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputationPointChangeRawData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "enreach.workload.ReputationPointChangeRawData.nodeID":
		value := x.NodeID
		return protoreflect.ValueOfString(value)
	case "enreach.workload.ReputationPointChangeRawData.deltaPoint":
		value := x.DeltaPoint
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawData.nodeID":
		x.NodeID = value.Interface().(string)
	case "enreach.workload.ReputationPointChangeRawData.deltaPoint":
		x.DeltaPoint = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawData.nodeID":
		panic(fmt.Errorf("field nodeID of message enreach.workload.ReputationPointChangeRawData is not mutable"))
	case "enreach.workload.ReputationPointChangeRawData.deltaPoint":
		panic(fmt.Errorf("field deltaPoint of message enreach.workload.ReputationPointChangeRawData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputationPointChangeRawData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawData.nodeID":
		return protoreflect.ValueOfString("")
	case "enreach.workload.ReputationPointChangeRawData.deltaPoint":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputationPointChangeRawData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in enreach.workload.ReputationPointChangeRawData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputationPointChangeRawData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputationPointChangeRawData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputationPointChangeRawData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputationPointChangeRawData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NodeID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DeltaPoint != 0 {
			n += 1 + runtime.Sov(uint64(x.DeltaPoint))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeRawData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DeltaPoint != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DeltaPoint))
			i--
			dAtA[i] = 0x10
		}
		if len(x.NodeID) > 0 {
			i -= len(x.NodeID)
			copy(dAtA[i:], x.NodeID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeRawData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeRawData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeRawData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DeltaPoint", wireType)
				}
				x.DeltaPoint = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DeltaPoint |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ReputationPointChangeRawDataDB            protoreflect.MessageDescriptor
	fd_ReputationPointChangeRawDataDB_deltaPoint protoreflect.FieldDescriptor
	fd_ReputationPointChangeRawDataDB_createAt   protoreflect.FieldDescriptor
	fd_ReputationPointChangeRawDataDB_updateAt   protoreflect.FieldDescriptor
)

func init() {
	file_enreach_workload_reputationpoint_proto_init()
	md_ReputationPointChangeRawDataDB = File_enreach_workload_reputationpoint_proto.Messages().ByName("ReputationPointChangeRawDataDB")
	fd_ReputationPointChangeRawDataDB_deltaPoint = md_ReputationPointChangeRawDataDB.Fields().ByName("deltaPoint")
	fd_ReputationPointChangeRawDataDB_createAt = md_ReputationPointChangeRawDataDB.Fields().ByName("createAt")
	fd_ReputationPointChangeRawDataDB_updateAt = md_ReputationPointChangeRawDataDB.Fields().ByName("updateAt")
}

var _ protoreflect.Message = (*fastReflection_ReputationPointChangeRawDataDB)(nil)

type fastReflection_ReputationPointChangeRawDataDB ReputationPointChangeRawDataDB

func (x *ReputationPointChangeRawDataDB) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeRawDataDB)(x)
}

func (x *ReputationPointChangeRawDataDB) slowProtoReflect() protoreflect.Message {
	mi := &file_enreach_workload_reputationpoint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputationPointChangeRawDataDB_messageType fastReflection_ReputationPointChangeRawDataDB_messageType
var _ protoreflect.MessageType = fastReflection_ReputationPointChangeRawDataDB_messageType{}

type fastReflection_ReputationPointChangeRawDataDB_messageType struct{}

func (x fastReflection_ReputationPointChangeRawDataDB_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeRawDataDB)(nil)
}
func (x fastReflection_ReputationPointChangeRawDataDB_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeRawDataDB)
}
func (x fastReflection_ReputationPointChangeRawDataDB_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeRawDataDB
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputationPointChangeRawDataDB) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeRawDataDB
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputationPointChangeRawDataDB) Type() protoreflect.MessageType {
	return _fastReflection_ReputationPointChangeRawDataDB_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputationPointChangeRawDataDB) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeRawDataDB)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputationPointChangeRawDataDB) Interface() protoreflect.ProtoMessage {
	return (*ReputationPointChangeRawDataDB)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputationPointChangeRawDataDB) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DeltaPoint != int64(0) {
		value := protoreflect.ValueOfInt64(x.DeltaPoint)
		if !f(fd_ReputationPointChangeRawDataDB_deltaPoint, value) {
			return
		}
	}
	if x.CreateAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CreateAt)
		if !f(fd_ReputationPointChangeRawDataDB_createAt, value) {
			return
		}
	}
	if x.UpdateAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UpdateAt)
		if !f(fd_ReputationPointChangeRawDataDB_updateAt, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputationPointChangeRawDataDB) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataDB.deltaPoint":
		return x.DeltaPoint != int64(0)
	case "enreach.workload.ReputationPointChangeRawDataDB.createAt":
		return x.CreateAt != uint64(0)
	case "enreach.workload.ReputationPointChangeRawDataDB.updateAt":
		return x.UpdateAt != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataDB does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataDB) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataDB.deltaPoint":
		x.DeltaPoint = int64(0)
	case "enreach.workload.ReputationPointChangeRawDataDB.createAt":
		x.CreateAt = uint64(0)
	case "enreach.workload.ReputationPointChangeRawDataDB.updateAt":
		x.UpdateAt = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataDB does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputationPointChangeRawDataDB) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataDB.deltaPoint":
		value := x.DeltaPoint
		return protoreflect.ValueOfInt64(value)
	case "enreach.workload.ReputationPointChangeRawDataDB.createAt":
		value := x.CreateAt
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.ReputationPointChangeRawDataDB.updateAt":
		value := x.UpdateAt
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataDB does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataDB) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataDB.deltaPoint":
		x.DeltaPoint = value.Int()
	case "enreach.workload.ReputationPointChangeRawDataDB.createAt":
		x.CreateAt = value.Uint()
	case "enreach.workload.ReputationPointChangeRawDataDB.updateAt":
		x.UpdateAt = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataDB does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataDB) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataDB.deltaPoint":
		panic(fmt.Errorf("field deltaPoint of message enreach.workload.ReputationPointChangeRawDataDB is not mutable"))
	case "enreach.workload.ReputationPointChangeRawDataDB.createAt":
		panic(fmt.Errorf("field createAt of message enreach.workload.ReputationPointChangeRawDataDB is not mutable"))
	case "enreach.workload.ReputationPointChangeRawDataDB.updateAt":
		panic(fmt.Errorf("field updateAt of message enreach.workload.ReputationPointChangeRawDataDB is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataDB does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputationPointChangeRawDataDB) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataDB.deltaPoint":
		return protoreflect.ValueOfInt64(int64(0))
	case "enreach.workload.ReputationPointChangeRawDataDB.createAt":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.ReputationPointChangeRawDataDB.updateAt":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataDB does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputationPointChangeRawDataDB) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in enreach.workload.ReputationPointChangeRawDataDB", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputationPointChangeRawDataDB) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataDB) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputationPointChangeRawDataDB) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputationPointChangeRawDataDB) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputationPointChangeRawDataDB)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.DeltaPoint != 0 {
			n += 1 + runtime.Sov(uint64(x.DeltaPoint))
		}
		if x.CreateAt != 0 {
			n += 1 + runtime.Sov(uint64(x.CreateAt))
		}
		if x.UpdateAt != 0 {
			n += 1 + runtime.Sov(uint64(x.UpdateAt))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeRawDataDB)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.UpdateAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UpdateAt))
			i--
			dAtA[i] = 0x18
		}
		if x.CreateAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreateAt))
			i--
			dAtA[i] = 0x10
		}
		if x.DeltaPoint != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DeltaPoint))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeRawDataDB)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeRawDataDB: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeRawDataDB: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DeltaPoint", wireType)
				}
				x.DeltaPoint = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DeltaPoint |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
				}
				x.CreateAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreateAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
				}
				x.UpdateAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UpdateAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.Map = (*_ReputationPointChangeRawDataMapDB_1_map)(nil)

type _ReputationPointChangeRawDataMapDB_1_map struct {
	m *map[string]*ReputationPointChangeRawDataDB
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Len() int {
	if x.m == nil {
		return 0
	}
	return len(*x.m)
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Range(f func(protoreflect.MapKey, protoreflect.Value) bool) {
	if x.m == nil {
		return
	}
	for k, v := range *x.m {
		mapKey := (protoreflect.MapKey)(protoreflect.ValueOfString(k))
		mapValue := protoreflect.ValueOfMessage(v.ProtoReflect())
		if !f(mapKey, mapValue) {
			break
		}
	}
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Has(key protoreflect.MapKey) bool {
	if x.m == nil {
		return false
	}
	keyUnwrapped := key.String()
	concreteValue := keyUnwrapped
	_, ok := (*x.m)[concreteValue]
	return ok
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Clear(key protoreflect.MapKey) {
	if x.m == nil {
		return
	}
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	delete(*x.m, concreteKey)
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Get(key protoreflect.MapKey) protoreflect.Value {
	if x.m == nil {
		return protoreflect.Value{}
	}
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	v, ok := (*x.m)[concreteKey]
	if !ok {
		return protoreflect.Value{}
	}
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Set(key protoreflect.MapKey, value protoreflect.Value) {
	if !key.IsValid() || !value.IsValid() {
		panic("invalid key or value provided")
	}
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ReputationPointChangeRawDataDB)
	(*x.m)[concreteKey] = concreteValue
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) Mutable(key protoreflect.MapKey) protoreflect.Value {
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	v, ok := (*x.m)[concreteKey]
	if ok {
		return protoreflect.ValueOfMessage(v.ProtoReflect())
	}
	newValue := new(ReputationPointChangeRawDataDB)
	(*x.m)[concreteKey] = newValue
	return protoreflect.ValueOfMessage(newValue.ProtoReflect())
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) NewValue() protoreflect.Value {
	v := new(ReputationPointChangeRawDataDB)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ReputationPointChangeRawDataMapDB_1_map) IsValid() bool {
	return x.m != nil
}

var (
	md_ReputationPointChangeRawDataMapDB      protoreflect.MessageDescriptor
	fd_ReputationPointChangeRawDataMapDB_data protoreflect.FieldDescriptor
)

func init() {
	file_enreach_workload_reputationpoint_proto_init()
	md_ReputationPointChangeRawDataMapDB = File_enreach_workload_reputationpoint_proto.Messages().ByName("ReputationPointChangeRawDataMapDB")
	fd_ReputationPointChangeRawDataMapDB_data = md_ReputationPointChangeRawDataMapDB.Fields().ByName("data")
}

var _ protoreflect.Message = (*fastReflection_ReputationPointChangeRawDataMapDB)(nil)

type fastReflection_ReputationPointChangeRawDataMapDB ReputationPointChangeRawDataMapDB

func (x *ReputationPointChangeRawDataMapDB) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeRawDataMapDB)(x)
}

func (x *ReputationPointChangeRawDataMapDB) slowProtoReflect() protoreflect.Message {
	mi := &file_enreach_workload_reputationpoint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputationPointChangeRawDataMapDB_messageType fastReflection_ReputationPointChangeRawDataMapDB_messageType
var _ protoreflect.MessageType = fastReflection_ReputationPointChangeRawDataMapDB_messageType{}

type fastReflection_ReputationPointChangeRawDataMapDB_messageType struct{}

func (x fastReflection_ReputationPointChangeRawDataMapDB_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeRawDataMapDB)(nil)
}
func (x fastReflection_ReputationPointChangeRawDataMapDB_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeRawDataMapDB)
}
func (x fastReflection_ReputationPointChangeRawDataMapDB_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeRawDataMapDB
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeRawDataMapDB
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Type() protoreflect.MessageType {
	return _fastReflection_ReputationPointChangeRawDataMapDB_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeRawDataMapDB)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Interface() protoreflect.ProtoMessage {
	return (*ReputationPointChangeRawDataMapDB)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Data) != 0 {
		value := protoreflect.ValueOfMap(&_ReputationPointChangeRawDataMapDB_1_map{m: &x.Data})
		if !f(fd_ReputationPointChangeRawDataMapDB_data, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataMapDB.data":
		return len(x.Data) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataMapDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataMapDB does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataMapDB.data":
		x.Data = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataMapDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataMapDB does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataMapDB.data":
		if len(x.Data) == 0 {
			return protoreflect.ValueOfMap(&_ReputationPointChangeRawDataMapDB_1_map{})
		}
		mapValue := &_ReputationPointChangeRawDataMapDB_1_map{m: &x.Data}
		return protoreflect.ValueOfMap(mapValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataMapDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataMapDB does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataMapDB.data":
		mv := value.Map()
		cmv := mv.(*_ReputationPointChangeRawDataMapDB_1_map)
		x.Data = *cmv.m
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataMapDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataMapDB does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataMapDB.data":
		if x.Data == nil {
			x.Data = make(map[string]*ReputationPointChangeRawDataDB)
		}
		value := &_ReputationPointChangeRawDataMapDB_1_map{m: &x.Data}
		return protoreflect.ValueOfMap(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataMapDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataMapDB does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeRawDataMapDB.data":
		m := make(map[string]*ReputationPointChangeRawDataDB)
		return protoreflect.ValueOfMap(&_ReputationPointChangeRawDataMapDB_1_map{m: &m})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeRawDataMapDB"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeRawDataMapDB does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in enreach.workload.ReputationPointChangeRawDataMapDB", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputationPointChangeRawDataMapDB) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputationPointChangeRawDataMapDB)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Data) > 0 {
			SiZeMaP := func(k string, v *ReputationPointChangeRawDataDB) {
				l := 0
				if v != nil {
					l = options.Size(v)
				}
				l += 1 + runtime.Sov(uint64(l))
				mapEntrySize := 1 + len(k) + runtime.Sov(uint64(len(k))) + l
				n += mapEntrySize + 1 + runtime.Sov(uint64(mapEntrySize))
			}
			if options.Deterministic {
				sortme := make([]string, 0, len(x.Data))
				for k := range x.Data {
					sortme = append(sortme, k)
				}
				sort.Strings(sortme)
				for _, k := range sortme {
					v := x.Data[k]
					SiZeMaP(k, v)
				}
			} else {
				for k, v := range x.Data {
					SiZeMaP(k, v)
				}
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeRawDataMapDB)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Data) > 0 {
			MaRsHaLmAp := func(k string, v *ReputationPointChangeRawDataDB) (protoiface.MarshalOutput, error) {
				baseI := i
				encoded, err := options.Marshal(v)
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
				i -= len(k)
				copy(dAtA[i:], k)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(k)))
				i--
				dAtA[i] = 0xa
				i = runtime.EncodeVarint(dAtA, i, uint64(baseI-i))
				i--
				dAtA[i] = 0xa
				return protoiface.MarshalOutput{}, nil
			}
			if options.Deterministic {
				keysForData := make([]string, 0, len(x.Data))
				for k := range x.Data {
					keysForData = append(keysForData, string(k))
				}
				sort.Slice(keysForData, func(i, j int) bool {
					return keysForData[i] < keysForData[j]
				})
				for iNdEx := len(keysForData) - 1; iNdEx >= 0; iNdEx-- {
					v := x.Data[string(keysForData[iNdEx])]
					out, err := MaRsHaLmAp(keysForData[iNdEx], v)
					if err != nil {
						return out, err
					}
				}
			} else {
				for k := range x.Data {
					v := x.Data[k]
					out, err := MaRsHaLmAp(k, v)
					if err != nil {
						return out, err
					}
				}
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeRawDataMapDB)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeRawDataMapDB: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeRawDataMapDB: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Data == nil {
					x.Data = make(map[string]*ReputationPointChangeRawDataDB)
				}
				var mapkey string
				var mapvalue *ReputationPointChangeRawDataDB
				for iNdEx < postIndex {
					entryPreIndex := iNdEx
					var wire uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						wire |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					fieldNum := int32(wire >> 3)
					if fieldNum == 1 {
						var stringLenmapkey uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							stringLenmapkey |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						intStringLenmapkey := int(stringLenmapkey)
						if intStringLenmapkey < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						postStringIndexmapkey := iNdEx + intStringLenmapkey
						if postStringIndexmapkey < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						if postStringIndexmapkey > l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
						iNdEx = postStringIndexmapkey
					} else if fieldNum == 2 {
						var mapmsglen int
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							mapmsglen |= int(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						if mapmsglen < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						postmsgIndex := iNdEx + mapmsglen
						if postmsgIndex < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						if postmsgIndex > l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						mapvalue = &ReputationPointChangeRawDataDB{}
						if err := options.Unmarshal(dAtA[iNdEx:postmsgIndex], mapvalue); err != nil {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
						}
						iNdEx = postmsgIndex
					} else {
						iNdEx = entryPreIndex
						skippy, err := runtime.Skip(dAtA[iNdEx:])
						if err != nil {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
						}
						if (skippy < 0) || (iNdEx+skippy) < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						if (iNdEx + skippy) > postIndex {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						iNdEx += skippy
					}
				}
				x.Data[mapkey] = mapvalue
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.Map = (*_ReputationPointChangeData_3_map)(nil)

type _ReputationPointChangeData_3_map struct {
	m *map[string]*ReputationPointChangeRawDataDB
}

func (x *_ReputationPointChangeData_3_map) Len() int {
	if x.m == nil {
		return 0
	}
	return len(*x.m)
}

func (x *_ReputationPointChangeData_3_map) Range(f func(protoreflect.MapKey, protoreflect.Value) bool) {
	if x.m == nil {
		return
	}
	for k, v := range *x.m {
		mapKey := (protoreflect.MapKey)(protoreflect.ValueOfString(k))
		mapValue := protoreflect.ValueOfMessage(v.ProtoReflect())
		if !f(mapKey, mapValue) {
			break
		}
	}
}

func (x *_ReputationPointChangeData_3_map) Has(key protoreflect.MapKey) bool {
	if x.m == nil {
		return false
	}
	keyUnwrapped := key.String()
	concreteValue := keyUnwrapped
	_, ok := (*x.m)[concreteValue]
	return ok
}

func (x *_ReputationPointChangeData_3_map) Clear(key protoreflect.MapKey) {
	if x.m == nil {
		return
	}
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	delete(*x.m, concreteKey)
}

func (x *_ReputationPointChangeData_3_map) Get(key protoreflect.MapKey) protoreflect.Value {
	if x.m == nil {
		return protoreflect.Value{}
	}
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	v, ok := (*x.m)[concreteKey]
	if !ok {
		return protoreflect.Value{}
	}
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ReputationPointChangeData_3_map) Set(key protoreflect.MapKey, value protoreflect.Value) {
	if !key.IsValid() || !value.IsValid() {
		panic("invalid key or value provided")
	}
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ReputationPointChangeRawDataDB)
	(*x.m)[concreteKey] = concreteValue
}

func (x *_ReputationPointChangeData_3_map) Mutable(key protoreflect.MapKey) protoreflect.Value {
	keyUnwrapped := key.String()
	concreteKey := keyUnwrapped
	v, ok := (*x.m)[concreteKey]
	if ok {
		return protoreflect.ValueOfMessage(v.ProtoReflect())
	}
	newValue := new(ReputationPointChangeRawDataDB)
	(*x.m)[concreteKey] = newValue
	return protoreflect.ValueOfMessage(newValue.ProtoReflect())
}

func (x *_ReputationPointChangeData_3_map) NewValue() protoreflect.Value {
	v := new(ReputationPointChangeRawDataDB)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ReputationPointChangeData_3_map) IsValid() bool {
	return x.m != nil
}

var (
	md_ReputationPointChangeData        protoreflect.MessageDescriptor
	fd_ReputationPointChangeData_era    protoreflect.FieldDescriptor
	fd_ReputationPointChangeData_nodeID protoreflect.FieldDescriptor
	fd_ReputationPointChangeData_data   protoreflect.FieldDescriptor
)

func init() {
	file_enreach_workload_reputationpoint_proto_init()
	md_ReputationPointChangeData = File_enreach_workload_reputationpoint_proto.Messages().ByName("ReputationPointChangeData")
	fd_ReputationPointChangeData_era = md_ReputationPointChangeData.Fields().ByName("era")
	fd_ReputationPointChangeData_nodeID = md_ReputationPointChangeData.Fields().ByName("nodeID")
	fd_ReputationPointChangeData_data = md_ReputationPointChangeData.Fields().ByName("data")
}

var _ protoreflect.Message = (*fastReflection_ReputationPointChangeData)(nil)

type fastReflection_ReputationPointChangeData ReputationPointChangeData

func (x *ReputationPointChangeData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeData)(x)
}

func (x *ReputationPointChangeData) slowProtoReflect() protoreflect.Message {
	mi := &file_enreach_workload_reputationpoint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputationPointChangeData_messageType fastReflection_ReputationPointChangeData_messageType
var _ protoreflect.MessageType = fastReflection_ReputationPointChangeData_messageType{}

type fastReflection_ReputationPointChangeData_messageType struct{}

func (x fastReflection_ReputationPointChangeData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputationPointChangeData)(nil)
}
func (x fastReflection_ReputationPointChangeData_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeData)
}
func (x fastReflection_ReputationPointChangeData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputationPointChangeData) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPointChangeData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputationPointChangeData) Type() protoreflect.MessageType {
	return _fastReflection_ReputationPointChangeData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputationPointChangeData) New() protoreflect.Message {
	return new(fastReflection_ReputationPointChangeData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputationPointChangeData) Interface() protoreflect.ProtoMessage {
	return (*ReputationPointChangeData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputationPointChangeData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Era != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Era)
		if !f(fd_ReputationPointChangeData_era, value) {
			return
		}
	}
	if x.NodeID != "" {
		value := protoreflect.ValueOfString(x.NodeID)
		if !f(fd_ReputationPointChangeData_nodeID, value) {
			return
		}
	}
	if len(x.Data) != 0 {
		value := protoreflect.ValueOfMap(&_ReputationPointChangeData_3_map{m: &x.Data})
		if !f(fd_ReputationPointChangeData_data, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputationPointChangeData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeData.era":
		return x.Era != uint64(0)
	case "enreach.workload.ReputationPointChangeData.nodeID":
		return x.NodeID != ""
	case "enreach.workload.ReputationPointChangeData.data":
		return len(x.Data) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeData.era":
		x.Era = uint64(0)
	case "enreach.workload.ReputationPointChangeData.nodeID":
		x.NodeID = ""
	case "enreach.workload.ReputationPointChangeData.data":
		x.Data = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputationPointChangeData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "enreach.workload.ReputationPointChangeData.era":
		value := x.Era
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.ReputationPointChangeData.nodeID":
		value := x.NodeID
		return protoreflect.ValueOfString(value)
	case "enreach.workload.ReputationPointChangeData.data":
		if len(x.Data) == 0 {
			return protoreflect.ValueOfMap(&_ReputationPointChangeData_3_map{})
		}
		mapValue := &_ReputationPointChangeData_3_map{m: &x.Data}
		return protoreflect.ValueOfMap(mapValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeData.era":
		x.Era = value.Uint()
	case "enreach.workload.ReputationPointChangeData.nodeID":
		x.NodeID = value.Interface().(string)
	case "enreach.workload.ReputationPointChangeData.data":
		mv := value.Map()
		cmv := mv.(*_ReputationPointChangeData_3_map)
		x.Data = *cmv.m
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeData.data":
		if x.Data == nil {
			x.Data = make(map[string]*ReputationPointChangeRawDataDB)
		}
		value := &_ReputationPointChangeData_3_map{m: &x.Data}
		return protoreflect.ValueOfMap(value)
	case "enreach.workload.ReputationPointChangeData.era":
		panic(fmt.Errorf("field era of message enreach.workload.ReputationPointChangeData is not mutable"))
	case "enreach.workload.ReputationPointChangeData.nodeID":
		panic(fmt.Errorf("field nodeID of message enreach.workload.ReputationPointChangeData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputationPointChangeData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPointChangeData.era":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.ReputationPointChangeData.nodeID":
		return protoreflect.ValueOfString("")
	case "enreach.workload.ReputationPointChangeData.data":
		m := make(map[string]*ReputationPointChangeRawDataDB)
		return protoreflect.ValueOfMap(&_ReputationPointChangeData_3_map{m: &m})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPointChangeData"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPointChangeData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputationPointChangeData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in enreach.workload.ReputationPointChangeData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputationPointChangeData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPointChangeData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputationPointChangeData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputationPointChangeData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputationPointChangeData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Era != 0 {
			n += 1 + runtime.Sov(uint64(x.Era))
		}
		l = len(x.NodeID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Data) > 0 {
			SiZeMaP := func(k string, v *ReputationPointChangeRawDataDB) {
				l := 0
				if v != nil {
					l = options.Size(v)
				}
				l += 1 + runtime.Sov(uint64(l))
				mapEntrySize := 1 + len(k) + runtime.Sov(uint64(len(k))) + l
				n += mapEntrySize + 1 + runtime.Sov(uint64(mapEntrySize))
			}
			if options.Deterministic {
				sortme := make([]string, 0, len(x.Data))
				for k := range x.Data {
					sortme = append(sortme, k)
				}
				sort.Strings(sortme)
				for _, k := range sortme {
					v := x.Data[k]
					SiZeMaP(k, v)
				}
			} else {
				for k, v := range x.Data {
					SiZeMaP(k, v)
				}
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Data) > 0 {
			MaRsHaLmAp := func(k string, v *ReputationPointChangeRawDataDB) (protoiface.MarshalOutput, error) {
				baseI := i
				encoded, err := options.Marshal(v)
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
				i -= len(k)
				copy(dAtA[i:], k)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(k)))
				i--
				dAtA[i] = 0xa
				i = runtime.EncodeVarint(dAtA, i, uint64(baseI-i))
				i--
				dAtA[i] = 0x1a
				return protoiface.MarshalOutput{}, nil
			}
			if options.Deterministic {
				keysForData := make([]string, 0, len(x.Data))
				for k := range x.Data {
					keysForData = append(keysForData, string(k))
				}
				sort.Slice(keysForData, func(i, j int) bool {
					return keysForData[i] < keysForData[j]
				})
				for iNdEx := len(keysForData) - 1; iNdEx >= 0; iNdEx-- {
					v := x.Data[string(keysForData[iNdEx])]
					out, err := MaRsHaLmAp(keysForData[iNdEx], v)
					if err != nil {
						return out, err
					}
				}
			} else {
				for k := range x.Data {
					v := x.Data[k]
					out, err := MaRsHaLmAp(k, v)
					if err != nil {
						return out, err
					}
				}
			}
		}
		if len(x.NodeID) > 0 {
			i -= len(x.NodeID)
			copy(dAtA[i:], x.NodeID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeID)))
			i--
			dAtA[i] = 0x12
		}
		if x.Era != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Era))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPointChangeData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPointChangeData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Era", wireType)
				}
				x.Era = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Era |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Data == nil {
					x.Data = make(map[string]*ReputationPointChangeRawDataDB)
				}
				var mapkey string
				var mapvalue *ReputationPointChangeRawDataDB
				for iNdEx < postIndex {
					entryPreIndex := iNdEx
					var wire uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						wire |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					fieldNum := int32(wire >> 3)
					if fieldNum == 1 {
						var stringLenmapkey uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							stringLenmapkey |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						intStringLenmapkey := int(stringLenmapkey)
						if intStringLenmapkey < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						postStringIndexmapkey := iNdEx + intStringLenmapkey
						if postStringIndexmapkey < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						if postStringIndexmapkey > l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
						iNdEx = postStringIndexmapkey
					} else if fieldNum == 2 {
						var mapmsglen int
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							mapmsglen |= int(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						if mapmsglen < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						postmsgIndex := iNdEx + mapmsglen
						if postmsgIndex < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						if postmsgIndex > l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						mapvalue = &ReputationPointChangeRawDataDB{}
						if err := options.Unmarshal(dAtA[iNdEx:postmsgIndex], mapvalue); err != nil {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
						}
						iNdEx = postmsgIndex
					} else {
						iNdEx = entryPreIndex
						skippy, err := runtime.Skip(dAtA[iNdEx:])
						if err != nil {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
						}
						if (skippy < 0) || (iNdEx+skippy) < 0 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
						}
						if (iNdEx + skippy) > postIndex {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						iNdEx += skippy
					}
				}
				x.Data[mapkey] = mapvalue
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ReputationPoint          protoreflect.MessageDescriptor
	fd_ReputationPoint_era      protoreflect.FieldDescriptor
	fd_ReputationPoint_nodeID   protoreflect.FieldDescriptor
	fd_ReputationPoint_point    protoreflect.FieldDescriptor
	fd_ReputationPoint_createAt protoreflect.FieldDescriptor
)

func init() {
	file_enreach_workload_reputationpoint_proto_init()
	md_ReputationPoint = File_enreach_workload_reputationpoint_proto.Messages().ByName("ReputationPoint")
	fd_ReputationPoint_era = md_ReputationPoint.Fields().ByName("era")
	fd_ReputationPoint_nodeID = md_ReputationPoint.Fields().ByName("nodeID")
	fd_ReputationPoint_point = md_ReputationPoint.Fields().ByName("point")
	fd_ReputationPoint_createAt = md_ReputationPoint.Fields().ByName("createAt")
}

var _ protoreflect.Message = (*fastReflection_ReputationPoint)(nil)

type fastReflection_ReputationPoint ReputationPoint

func (x *ReputationPoint) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReputationPoint)(x)
}

func (x *ReputationPoint) slowProtoReflect() protoreflect.Message {
	mi := &file_enreach_workload_reputationpoint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReputationPoint_messageType fastReflection_ReputationPoint_messageType
var _ protoreflect.MessageType = fastReflection_ReputationPoint_messageType{}

type fastReflection_ReputationPoint_messageType struct{}

func (x fastReflection_ReputationPoint_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReputationPoint)(nil)
}
func (x fastReflection_ReputationPoint_messageType) New() protoreflect.Message {
	return new(fastReflection_ReputationPoint)
}
func (x fastReflection_ReputationPoint_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPoint
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReputationPoint) Descriptor() protoreflect.MessageDescriptor {
	return md_ReputationPoint
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReputationPoint) Type() protoreflect.MessageType {
	return _fastReflection_ReputationPoint_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReputationPoint) New() protoreflect.Message {
	return new(fastReflection_ReputationPoint)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReputationPoint) Interface() protoreflect.ProtoMessage {
	return (*ReputationPoint)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReputationPoint) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Era != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Era)
		if !f(fd_ReputationPoint_era, value) {
			return
		}
	}
	if x.NodeID != "" {
		value := protoreflect.ValueOfString(x.NodeID)
		if !f(fd_ReputationPoint_nodeID, value) {
			return
		}
	}
	if x.Point != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Point)
		if !f(fd_ReputationPoint_point, value) {
			return
		}
	}
	if x.CreateAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CreateAt)
		if !f(fd_ReputationPoint_createAt, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReputationPoint) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "enreach.workload.ReputationPoint.era":
		return x.Era != uint64(0)
	case "enreach.workload.ReputationPoint.nodeID":
		return x.NodeID != ""
	case "enreach.workload.ReputationPoint.point":
		return x.Point != uint64(0)
	case "enreach.workload.ReputationPoint.createAt":
		return x.CreateAt != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPoint"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPoint does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPoint) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPoint.era":
		x.Era = uint64(0)
	case "enreach.workload.ReputationPoint.nodeID":
		x.NodeID = ""
	case "enreach.workload.ReputationPoint.point":
		x.Point = uint64(0)
	case "enreach.workload.ReputationPoint.createAt":
		x.CreateAt = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPoint"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPoint does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReputationPoint) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "enreach.workload.ReputationPoint.era":
		value := x.Era
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.ReputationPoint.nodeID":
		value := x.NodeID
		return protoreflect.ValueOfString(value)
	case "enreach.workload.ReputationPoint.point":
		value := x.Point
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.ReputationPoint.createAt":
		value := x.CreateAt
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPoint"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPoint does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPoint) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "enreach.workload.ReputationPoint.era":
		x.Era = value.Uint()
	case "enreach.workload.ReputationPoint.nodeID":
		x.NodeID = value.Interface().(string)
	case "enreach.workload.ReputationPoint.point":
		x.Point = value.Uint()
	case "enreach.workload.ReputationPoint.createAt":
		x.CreateAt = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPoint"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPoint does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPoint) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPoint.era":
		panic(fmt.Errorf("field era of message enreach.workload.ReputationPoint is not mutable"))
	case "enreach.workload.ReputationPoint.nodeID":
		panic(fmt.Errorf("field nodeID of message enreach.workload.ReputationPoint is not mutable"))
	case "enreach.workload.ReputationPoint.point":
		panic(fmt.Errorf("field point of message enreach.workload.ReputationPoint is not mutable"))
	case "enreach.workload.ReputationPoint.createAt":
		panic(fmt.Errorf("field createAt of message enreach.workload.ReputationPoint is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPoint"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPoint does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReputationPoint) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.ReputationPoint.era":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.ReputationPoint.nodeID":
		return protoreflect.ValueOfString("")
	case "enreach.workload.ReputationPoint.point":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.ReputationPoint.createAt":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.ReputationPoint"))
		}
		panic(fmt.Errorf("message enreach.workload.ReputationPoint does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReputationPoint) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in enreach.workload.ReputationPoint", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReputationPoint) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReputationPoint) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReputationPoint) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReputationPoint) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReputationPoint)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Era != 0 {
			n += 1 + runtime.Sov(uint64(x.Era))
		}
		l = len(x.NodeID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Point != 0 {
			n += 1 + runtime.Sov(uint64(x.Point))
		}
		if x.CreateAt != 0 {
			n += 1 + runtime.Sov(uint64(x.CreateAt))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPoint)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CreateAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreateAt))
			i--
			dAtA[i] = 0x20
		}
		if x.Point != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Point))
			i--
			dAtA[i] = 0x18
		}
		if len(x.NodeID) > 0 {
			i -= len(x.NodeID)
			copy(dAtA[i:], x.NodeID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeID)))
			i--
			dAtA[i] = 0x12
		}
		if x.Era != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Era))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReputationPoint)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPoint: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReputationPoint: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Era", wireType)
				}
				x.Era = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Era |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Point", wireType)
				}
				x.Point = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Point |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
				}
				x.CreateAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreateAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EraProcessData                     protoreflect.MessageDescriptor
	fd_EraProcessData_era                 protoreflect.FieldDescriptor
	fd_EraProcessData_totalNodesCount     protoreflect.FieldDescriptor
	fd_EraProcessData_processedNodesCount protoreflect.FieldDescriptor
	fd_EraProcessData_startAt             protoreflect.FieldDescriptor
	fd_EraProcessData_updateAt            protoreflect.FieldDescriptor
	fd_EraProcessData_status              protoreflect.FieldDescriptor
	fd_EraProcessData_pagination          protoreflect.FieldDescriptor
)

func init() {
	file_enreach_workload_reputationpoint_proto_init()
	md_EraProcessData = File_enreach_workload_reputationpoint_proto.Messages().ByName("EraProcessData")
	fd_EraProcessData_era = md_EraProcessData.Fields().ByName("era")
	fd_EraProcessData_totalNodesCount = md_EraProcessData.Fields().ByName("totalNodesCount")
	fd_EraProcessData_processedNodesCount = md_EraProcessData.Fields().ByName("processedNodesCount")
	fd_EraProcessData_startAt = md_EraProcessData.Fields().ByName("startAt")
	fd_EraProcessData_updateAt = md_EraProcessData.Fields().ByName("updateAt")
	fd_EraProcessData_status = md_EraProcessData.Fields().ByName("status")
	fd_EraProcessData_pagination = md_EraProcessData.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_EraProcessData)(nil)

type fastReflection_EraProcessData EraProcessData

func (x *EraProcessData) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EraProcessData)(x)
}

func (x *EraProcessData) slowProtoReflect() protoreflect.Message {
	mi := &file_enreach_workload_reputationpoint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EraProcessData_messageType fastReflection_EraProcessData_messageType
var _ protoreflect.MessageType = fastReflection_EraProcessData_messageType{}

type fastReflection_EraProcessData_messageType struct{}

func (x fastReflection_EraProcessData_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EraProcessData)(nil)
}
func (x fastReflection_EraProcessData_messageType) New() protoreflect.Message {
	return new(fastReflection_EraProcessData)
}
func (x fastReflection_EraProcessData_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EraProcessData
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EraProcessData) Descriptor() protoreflect.MessageDescriptor {
	return md_EraProcessData
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EraProcessData) Type() protoreflect.MessageType {
	return _fastReflection_EraProcessData_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EraProcessData) New() protoreflect.Message {
	return new(fastReflection_EraProcessData)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EraProcessData) Interface() protoreflect.ProtoMessage {
	return (*EraProcessData)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EraProcessData) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Era != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Era)
		if !f(fd_EraProcessData_era, value) {
			return
		}
	}
	if x.TotalNodesCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalNodesCount)
		if !f(fd_EraProcessData_totalNodesCount, value) {
			return
		}
	}
	if x.ProcessedNodesCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProcessedNodesCount)
		if !f(fd_EraProcessData_processedNodesCount, value) {
			return
		}
	}
	if x.StartAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartAt)
		if !f(fd_EraProcessData_startAt, value) {
			return
		}
	}
	if x.UpdateAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UpdateAt)
		if !f(fd_EraProcessData_updateAt, value) {
			return
		}
	}
	if x.Status != "" {
		value := protoreflect.ValueOfString(x.Status)
		if !f(fd_EraProcessData_status, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_EraProcessData_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EraProcessData) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "enreach.workload.EraProcessData.era":
		return x.Era != uint64(0)
	case "enreach.workload.EraProcessData.totalNodesCount":
		return x.TotalNodesCount != uint64(0)
	case "enreach.workload.EraProcessData.processedNodesCount":
		return x.ProcessedNodesCount != uint64(0)
	case "enreach.workload.EraProcessData.startAt":
		return x.StartAt != uint64(0)
	case "enreach.workload.EraProcessData.updateAt":
		return x.UpdateAt != uint64(0)
	case "enreach.workload.EraProcessData.status":
		return x.Status != ""
	case "enreach.workload.EraProcessData.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.EraProcessData"))
		}
		panic(fmt.Errorf("message enreach.workload.EraProcessData does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EraProcessData) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "enreach.workload.EraProcessData.era":
		x.Era = uint64(0)
	case "enreach.workload.EraProcessData.totalNodesCount":
		x.TotalNodesCount = uint64(0)
	case "enreach.workload.EraProcessData.processedNodesCount":
		x.ProcessedNodesCount = uint64(0)
	case "enreach.workload.EraProcessData.startAt":
		x.StartAt = uint64(0)
	case "enreach.workload.EraProcessData.updateAt":
		x.UpdateAt = uint64(0)
	case "enreach.workload.EraProcessData.status":
		x.Status = ""
	case "enreach.workload.EraProcessData.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.EraProcessData"))
		}
		panic(fmt.Errorf("message enreach.workload.EraProcessData does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EraProcessData) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "enreach.workload.EraProcessData.era":
		value := x.Era
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.EraProcessData.totalNodesCount":
		value := x.TotalNodesCount
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.EraProcessData.processedNodesCount":
		value := x.ProcessedNodesCount
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.EraProcessData.startAt":
		value := x.StartAt
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.EraProcessData.updateAt":
		value := x.UpdateAt
		return protoreflect.ValueOfUint64(value)
	case "enreach.workload.EraProcessData.status":
		value := x.Status
		return protoreflect.ValueOfString(value)
	case "enreach.workload.EraProcessData.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.EraProcessData"))
		}
		panic(fmt.Errorf("message enreach.workload.EraProcessData does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EraProcessData) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "enreach.workload.EraProcessData.era":
		x.Era = value.Uint()
	case "enreach.workload.EraProcessData.totalNodesCount":
		x.TotalNodesCount = value.Uint()
	case "enreach.workload.EraProcessData.processedNodesCount":
		x.ProcessedNodesCount = value.Uint()
	case "enreach.workload.EraProcessData.startAt":
		x.StartAt = value.Uint()
	case "enreach.workload.EraProcessData.updateAt":
		x.UpdateAt = value.Uint()
	case "enreach.workload.EraProcessData.status":
		x.Status = value.Interface().(string)
	case "enreach.workload.EraProcessData.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.EraProcessData"))
		}
		panic(fmt.Errorf("message enreach.workload.EraProcessData does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EraProcessData) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.EraProcessData.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	case "enreach.workload.EraProcessData.era":
		panic(fmt.Errorf("field era of message enreach.workload.EraProcessData is not mutable"))
	case "enreach.workload.EraProcessData.totalNodesCount":
		panic(fmt.Errorf("field totalNodesCount of message enreach.workload.EraProcessData is not mutable"))
	case "enreach.workload.EraProcessData.processedNodesCount":
		panic(fmt.Errorf("field processedNodesCount of message enreach.workload.EraProcessData is not mutable"))
	case "enreach.workload.EraProcessData.startAt":
		panic(fmt.Errorf("field startAt of message enreach.workload.EraProcessData is not mutable"))
	case "enreach.workload.EraProcessData.updateAt":
		panic(fmt.Errorf("field updateAt of message enreach.workload.EraProcessData is not mutable"))
	case "enreach.workload.EraProcessData.status":
		panic(fmt.Errorf("field status of message enreach.workload.EraProcessData is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.EraProcessData"))
		}
		panic(fmt.Errorf("message enreach.workload.EraProcessData does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EraProcessData) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "enreach.workload.EraProcessData.era":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.EraProcessData.totalNodesCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.EraProcessData.processedNodesCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.EraProcessData.startAt":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.EraProcessData.updateAt":
		return protoreflect.ValueOfUint64(uint64(0))
	case "enreach.workload.EraProcessData.status":
		return protoreflect.ValueOfString("")
	case "enreach.workload.EraProcessData.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: enreach.workload.EraProcessData"))
		}
		panic(fmt.Errorf("message enreach.workload.EraProcessData does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EraProcessData) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in enreach.workload.EraProcessData", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EraProcessData) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EraProcessData) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EraProcessData) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EraProcessData) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EraProcessData)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Era != 0 {
			n += 1 + runtime.Sov(uint64(x.Era))
		}
		if x.TotalNodesCount != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalNodesCount))
		}
		if x.ProcessedNodesCount != 0 {
			n += 1 + runtime.Sov(uint64(x.ProcessedNodesCount))
		}
		if x.StartAt != 0 {
			n += 1 + runtime.Sov(uint64(x.StartAt))
		}
		if x.UpdateAt != 0 {
			n += 1 + runtime.Sov(uint64(x.UpdateAt))
		}
		l = len(x.Status)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EraProcessData)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Status) > 0 {
			i -= len(x.Status)
			copy(dAtA[i:], x.Status)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Status)))
			i--
			dAtA[i] = 0x32
		}
		if x.UpdateAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UpdateAt))
			i--
			dAtA[i] = 0x28
		}
		if x.StartAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartAt))
			i--
			dAtA[i] = 0x20
		}
		if x.ProcessedNodesCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProcessedNodesCount))
			i--
			dAtA[i] = 0x18
		}
		if x.TotalNodesCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalNodesCount))
			i--
			dAtA[i] = 0x10
		}
		if x.Era != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Era))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EraProcessData)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EraProcessData: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EraProcessData: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Era", wireType)
				}
				x.Era = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Era |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalNodesCount", wireType)
				}
				x.TotalNodesCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalNodesCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProcessedNodesCount", wireType)
				}
				x.ProcessedNodesCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProcessedNodesCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartAt", wireType)
				}
				x.StartAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
				}
				x.UpdateAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UpdateAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Status = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: enreach/workload/reputationpoint.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReputationPointChangeRawData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID     string `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	DeltaPoint int64  `protobuf:"varint,2,opt,name=deltaPoint,proto3" json:"deltaPoint,omitempty"`
}

func (x *ReputationPointChangeRawData) Reset() {
	*x = ReputationPointChangeRawData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enreach_workload_reputationpoint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputationPointChangeRawData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputationPointChangeRawData) ProtoMessage() {}

// Deprecated: Use ReputationPointChangeRawData.ProtoReflect.Descriptor instead.
func (*ReputationPointChangeRawData) Descriptor() ([]byte, []int) {
	return file_enreach_workload_reputationpoint_proto_rawDescGZIP(), []int{0}
}

func (x *ReputationPointChangeRawData) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ReputationPointChangeRawData) GetDeltaPoint() int64 {
	if x != nil {
		return x.DeltaPoint
	}
	return 0
}

type ReputationPointChangeRawDataDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaPoint int64  `protobuf:"varint,1,opt,name=deltaPoint,proto3" json:"deltaPoint,omitempty"`
	CreateAt   uint64 `protobuf:"varint,2,opt,name=createAt,proto3" json:"createAt,omitempty"`
	UpdateAt   uint64 `protobuf:"varint,3,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
}

func (x *ReputationPointChangeRawDataDB) Reset() {
	*x = ReputationPointChangeRawDataDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enreach_workload_reputationpoint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputationPointChangeRawDataDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputationPointChangeRawDataDB) ProtoMessage() {}

// Deprecated: Use ReputationPointChangeRawDataDB.ProtoReflect.Descriptor instead.
func (*ReputationPointChangeRawDataDB) Descriptor() ([]byte, []int) {
	return file_enreach_workload_reputationpoint_proto_rawDescGZIP(), []int{1}
}

func (x *ReputationPointChangeRawDataDB) GetDeltaPoint() int64 {
	if x != nil {
		return x.DeltaPoint
	}
	return 0
}

func (x *ReputationPointChangeRawDataDB) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *ReputationPointChangeRawDataDB) GetUpdateAt() uint64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type ReputationPointChangeRawDataMapDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*ReputationPointChangeRawDataDB `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // manager_account => reputation point request
}

func (x *ReputationPointChangeRawDataMapDB) Reset() {
	*x = ReputationPointChangeRawDataMapDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enreach_workload_reputationpoint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputationPointChangeRawDataMapDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputationPointChangeRawDataMapDB) ProtoMessage() {}

// Deprecated: Use ReputationPointChangeRawDataMapDB.ProtoReflect.Descriptor instead.
func (*ReputationPointChangeRawDataMapDB) Descriptor() ([]byte, []int) {
	return file_enreach_workload_reputationpoint_proto_rawDescGZIP(), []int{2}
}

func (x *ReputationPointChangeRawDataMapDB) GetData() map[string]*ReputationPointChangeRawDataDB {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReputationPointChangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Era    uint64                                     `protobuf:"varint,1,opt,name=era,proto3" json:"era,omitempty"`
	NodeID string                                     `protobuf:"bytes,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Data   map[string]*ReputationPointChangeRawDataDB `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ReputationPointChangeData) Reset() {
	*x = ReputationPointChangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enreach_workload_reputationpoint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputationPointChangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputationPointChangeData) ProtoMessage() {}

// Deprecated: Use ReputationPointChangeData.ProtoReflect.Descriptor instead.
func (*ReputationPointChangeData) Descriptor() ([]byte, []int) {
	return file_enreach_workload_reputationpoint_proto_rawDescGZIP(), []int{3}
}

func (x *ReputationPointChangeData) GetEra() uint64 {
	if x != nil {
		return x.Era
	}
	return 0
}

func (x *ReputationPointChangeData) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ReputationPointChangeData) GetData() map[string]*ReputationPointChangeRawDataDB {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReputationPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Era      uint64 `protobuf:"varint,1,opt,name=era,proto3" json:"era,omitempty"`
	NodeID   string `protobuf:"bytes,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Point    uint64 `protobuf:"varint,3,opt,name=point,proto3" json:"point,omitempty"`
	CreateAt uint64 `protobuf:"varint,4,opt,name=createAt,proto3" json:"createAt,omitempty"`
}

func (x *ReputationPoint) Reset() {
	*x = ReputationPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enreach_workload_reputationpoint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReputationPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReputationPoint) ProtoMessage() {}

// Deprecated: Use ReputationPoint.ProtoReflect.Descriptor instead.
func (*ReputationPoint) Descriptor() ([]byte, []int) {
	return file_enreach_workload_reputationpoint_proto_rawDescGZIP(), []int{4}
}

func (x *ReputationPoint) GetEra() uint64 {
	if x != nil {
		return x.Era
	}
	return 0
}

func (x *ReputationPoint) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ReputationPoint) GetPoint() uint64 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ReputationPoint) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type EraProcessData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Era                 uint64                `protobuf:"varint,1,opt,name=era,proto3" json:"era,omitempty"`
	TotalNodesCount     uint64                `protobuf:"varint,2,opt,name=totalNodesCount,proto3" json:"totalNodesCount,omitempty"`         // total nodes count need to be processed
	ProcessedNodesCount uint64                `protobuf:"varint,3,opt,name=processedNodesCount,proto3" json:"processedNodesCount,omitempty"` // accumulated processed nodes count
	StartAt             uint64                `protobuf:"varint,4,opt,name=startAt,proto3" json:"startAt,omitempty"`
	UpdateAt            uint64                `protobuf:"varint,5,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
	Status              string                `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Pagination          *v1beta1.PageResponse `protobuf:"bytes,7,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *EraProcessData) Reset() {
	*x = EraProcessData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enreach_workload_reputationpoint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EraProcessData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EraProcessData) ProtoMessage() {}

// Deprecated: Use EraProcessData.ProtoReflect.Descriptor instead.
func (*EraProcessData) Descriptor() ([]byte, []int) {
	return file_enreach_workload_reputationpoint_proto_rawDescGZIP(), []int{5}
}

func (x *EraProcessData) GetEra() uint64 {
	if x != nil {
		return x.Era
	}
	return 0
}

func (x *EraProcessData) GetTotalNodesCount() uint64 {
	if x != nil {
		return x.TotalNodesCount
	}
	return 0
}

func (x *EraProcessData) GetProcessedNodesCount() uint64 {
	if x != nil {
		return x.ProcessedNodesCount
	}
	return 0
}

func (x *EraProcessData) GetStartAt() uint64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *EraProcessData) GetUpdateAt() uint64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *EraProcessData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EraProcessData) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_enreach_workload_reputationpoint_proto protoreflect.FileDescriptor

var file_enreach_workload_reputationpoint_proto_rawDesc = []byte{
	0x0a, 0x26, 0x65, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x2f, 0x72, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x6e, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x1c, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x78,
	0x0a, 0x1e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x44, 0x42,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x70,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x44, 0x42, 0x12, 0x51,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x65,
	0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x44,
	0x42, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x69, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x65, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x42, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfb, 0x01, 0x0a,
	0x19, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x72, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x69, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x65, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x52, 0x65, 0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x44, 0x42, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a, 0x0f, 0x52, 0x65,
	0x70, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x72, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x0e, 0x45, 0x72,
	0x61, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x72, 0x61, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0xb0, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6e, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x14, 0x52, 0x65, 0x70, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x21, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0xa2, 0x02, 0x03, 0x45, 0x57, 0x58, 0xaa, 0x02, 0x10, 0x45, 0x6e,
	0x72, 0x65, 0x61, 0x63, 0x68, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0xca, 0x02,
	0x10, 0x45, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5c, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0xe2, 0x02, 0x1c, 0x45, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x5c, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x11, 0x45, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x3a, 0x3a, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enreach_workload_reputationpoint_proto_rawDescOnce sync.Once
	file_enreach_workload_reputationpoint_proto_rawDescData = file_enreach_workload_reputationpoint_proto_rawDesc
)

func file_enreach_workload_reputationpoint_proto_rawDescGZIP() []byte {
	file_enreach_workload_reputationpoint_proto_rawDescOnce.Do(func() {
		file_enreach_workload_reputationpoint_proto_rawDescData = protoimpl.X.CompressGZIP(file_enreach_workload_reputationpoint_proto_rawDescData)
	})
	return file_enreach_workload_reputationpoint_proto_rawDescData
}

var file_enreach_workload_reputationpoint_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_enreach_workload_reputationpoint_proto_goTypes = []interface{}{
	(*ReputationPointChangeRawData)(nil),      // 0: enreach.workload.ReputationPointChangeRawData
	(*ReputationPointChangeRawDataDB)(nil),    // 1: enreach.workload.ReputationPointChangeRawDataDB
	(*ReputationPointChangeRawDataMapDB)(nil), // 2: enreach.workload.ReputationPointChangeRawDataMapDB
	(*ReputationPointChangeData)(nil),         // 3: enreach.workload.ReputationPointChangeData
	(*ReputationPoint)(nil),                   // 4: enreach.workload.ReputationPoint
	(*EraProcessData)(nil),                    // 5: enreach.workload.EraProcessData
	nil,                                       // 6: enreach.workload.ReputationPointChangeRawDataMapDB.DataEntry
	nil,                                       // 7: enreach.workload.ReputationPointChangeData.DataEntry
	(*v1beta1.PageResponse)(nil),              // 8: cosmos.base.query.v1beta1.PageResponse
}
var file_enreach_workload_reputationpoint_proto_depIdxs = []int32{
	6, // 0: enreach.workload.ReputationPointChangeRawDataMapDB.data:type_name -> enreach.workload.ReputationPointChangeRawDataMapDB.DataEntry
	7, // 1: enreach.workload.ReputationPointChangeData.data:type_name -> enreach.workload.ReputationPointChangeData.DataEntry
	8, // 2: enreach.workload.EraProcessData.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	1, // 3: enreach.workload.ReputationPointChangeRawDataMapDB.DataEntry.value:type_name -> enreach.workload.ReputationPointChangeRawDataDB
	1, // 4: enreach.workload.ReputationPointChangeData.DataEntry.value:type_name -> enreach.workload.ReputationPointChangeRawDataDB
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_enreach_workload_reputationpoint_proto_init() }
func file_enreach_workload_reputationpoint_proto_init() {
	if File_enreach_workload_reputationpoint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enreach_workload_reputationpoint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputationPointChangeRawData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enreach_workload_reputationpoint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputationPointChangeRawDataDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enreach_workload_reputationpoint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputationPointChangeRawDataMapDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enreach_workload_reputationpoint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputationPointChangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enreach_workload_reputationpoint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReputationPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enreach_workload_reputationpoint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EraProcessData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enreach_workload_reputationpoint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enreach_workload_reputationpoint_proto_goTypes,
		DependencyIndexes: file_enreach_workload_reputationpoint_proto_depIdxs,
		MessageInfos:      file_enreach_workload_reputationpoint_proto_msgTypes,
	}.Build()
	File_enreach_workload_reputationpoint_proto = out.File
	file_enreach_workload_reputationpoint_proto_rawDesc = nil
	file_enreach_workload_reputationpoint_proto_goTypes = nil
	file_enreach_workload_reputationpoint_proto_depIdxs = nil
}
