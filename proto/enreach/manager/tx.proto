syntax = "proto3";

package enreach.manager;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "enreach/manager/params.proto";
import "enreach/manager/manager.proto";
import "enreach/manager/operator.proto";

option go_package = "enreach/x/manager/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams             (MsgUpdateParams            ) returns (MsgUpdateParamsResponse            );
  
  rpc CreateOperator           (MsgCreateOperator          ) returns (MsgCreateOperatorResponse          );
  rpc BindOperatorManagerAccount (MsgBindOperatorManagerAccount) returns (MsgBindOperatorManagerAccountResponse);
  rpc SetManagerRegion         (MsgSetManagerRegion        ) returns (MsgSetManagerRegionResponse        );
  rpc UpdateManagerConnParams  (MsgUpdateManagerConnParams ) returns (MsgUpdateManagerConnParamsResponse );
  rpc ActivateManager          (MsgActivateManager         ) returns (MsgActivateManagerResponse         );
  rpc BindOperatorEVMAccount    (MsgBindOperatorEVMAccount   ) returns (MsgBindOperatorEVMAccountResponse   );
  rpc UpdateOperatorBasicInfo   (MsgUpdateOperatorBasicInfo  ) returns (MsgUpdateOperatorBasicInfoResponse  );

  rpc RegisterManager           (MsgRegisterManager          ) returns (MsgRegisterManagerResponse          );
  rpc GoWorking                (MsgGoWorking               ) returns (MsgGoWorkingResponse               );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                         "authority";
  option           (amino.name) = "enreach/x/manager/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}


message MsgCreateOperator {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount =  1;
  string name            =  2;
  string description     =  3;
  string websiteUrl      =  4;
}

message MsgCreateOperatorResponse {
}

message MsgBindOperatorManagerAccount {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount  = 1;
  string managerAccount   = 2;
  bytes  managerSignature = 3;
  bool   forceUnbind      = 4;
}

message MsgBindOperatorManagerAccountResponse {}

message MsgSetManagerRegion {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount = 1;
  string regionCode      = 2;
}

message MsgSetManagerRegionResponse {}


message MsgUpdateManagerConnParams {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount = 1;
  string hostAddress    = 2;
  uint32 managerPort    = 3;
  uint32 trackerPort    = 4;
  uint32 chainAPIPort   = 5;
  uint32 chainRPCPort   = 6;
}

message MsgUpdateManagerConnParamsResponse {}


message MsgActivateManager {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount = 1;
  string license         = 2;
}

message MsgActivateManagerResponse {}


message MsgBindOperatorEVMAccount {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount = 1;
  string evmAccount     = 2;
  bytes  evmSignature   = 3;
}

message MsgBindOperatorEVMAccountResponse {}

message MsgUpdateOperatorBasicInfo {
  option (cosmos.msg.v1.signer) = "operatorAccount";
  string operatorAccount = 1;
  string name           = 2;
  string description    = 3;
  string websiteUrl     = 4;
}

message MsgUpdateOperatorBasicInfoResponse {}


message MsgRegisterManager {
  option (cosmos.msg.v1.signer) = "managerAccount";
  string managerAccount = 1;
  string hostAddress   = 2;
  uint32 managerPort   = 3;
  uint32 trackerPort   = 4;
  uint32 chainAPIPort  = 5;
  uint32 chainRPCPort  = 6;
}

message MsgRegisterManagerResponse {}

message MsgGoWorking {
  option (cosmos.msg.v1.signer) = "managerAccount";
  string managerAccount = 1;
}

message MsgGoWorkingResponse {}
