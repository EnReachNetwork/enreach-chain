syntax = "proto3";

package enreach.edgenode;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "enreach/edgenode/params.proto";
import "enreach/edgenode/user.proto";
import "enreach/edgenode/node.proto";
import "enreach/edgenode/superior.proto";

option go_package = "enreach/x/edgenode/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/enreach/edgenode/params";
  
  }
  
  // Queries a list of User items.
  rpc User    (QueryGetUserRequest) returns (QueryGetUserResponse) {
    option (google.api.http).get = "/enreach/edgenode/user/{userID}";
  
  }
  rpc UserAll (QueryAllUserRequest) returns (QueryAllUserResponse) {
    option (google.api.http).get = "/enreach/edgenode/users";
  
  }
  
  // Queries a list of Node items.
  rpc Node    (QueryGetNodeRequest) returns (QueryGetNodeResponse) {
    option (google.api.http).get = "/enreach/edgenode/node/{nodeID}";
  
  }
  rpc NodeAll (QueryAllNodeRequest) returns (QueryAllNodeResponse) {
    option (google.api.http).get = "/enreach/edgenode/nodes";
  
  }
  
  // Queries a Superior by index.
  rpc Superior (QueryGetSuperiorRequest) returns (QueryGetSuperiorResponse) {
    option (google.api.http).get = "/enreach/edgenode/superior";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetUserRequest {
  string userID = 1;
}

message QueryGetUserResponse {
  User User = 1 [(gogoproto.nullable) = false];
}

message QueryAllUserRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserResponse {
  repeated User                                   User       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetNodeRequest {
  string nodeID = 1;
}

message QueryGetNodeResponse {
  Node Node = 1 [(gogoproto.nullable) = false];
}

message QueryAllNodeRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNodeResponse {
  repeated Node                                   Node       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSuperiorRequest {}

message QueryGetSuperiorResponse {
  Superior Superior = 1 [(gogoproto.nullable) = false];
}

