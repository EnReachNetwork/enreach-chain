syntax = "proto3";

package enreach.registry;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "enreach/registry/params.proto";
import "enreach/registry/region.proto";

option go_package = "enreach/x/registry/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/enreach/registry/params";
  
  }
  
  // Queries a list of Region items.
  rpc Region    (QueryGetRegionRequest) returns (QueryGetRegionResponse) {
    option (google.api.http).get = "/enreach/registry/region/{code}";
  
  }
  rpc RegionAll (QueryAllRegionRequest) returns (QueryAllRegionResponse) {
    option (google.api.http).get = "/enreach/registry/regions";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetRegionRequest {
  string code = 1;
}

message QueryGetRegionResponse {
  Region Region = 1 [(gogoproto.nullable) = false];
}

message QueryAllRegionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRegionResponse {
  repeated Region                                 Region     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

