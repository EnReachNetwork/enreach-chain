syntax = "proto3";
package enreach.workload;

import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "enreach/x/workload/types";

message ReputationPointChangeRawData {
  string nodeID = 1; 
  int64 deltaPoint = 2; 
}

message ReputationPointChangeRawDataDB {
  int64 deltaPoint = 1; 
  uint64 createAt = 2;
  uint64 updateAt = 3;
}

message ReputationPointChangeRawDataMapDB {
  map<string, ReputationPointChangeRawDataDB> data = 1;  // manager_account => reputation point request
}

message ReputationPointChangeData {
  uint64 era = 1;
  string nodeID = 2; 
  map<string, ReputationPointChangeRawDataDB> data = 3;
}

message ReputationDeltaPoint {
  uint64 era = 1; 
  string nodeID = 2; 
  int64 deltaPoint = 3; 
  uint64 createAt = 4; 
}

message ReputationPoint {
  string nodeID = 1; 
  int64 point = 2; 
  uint64 createAt = 3; 
  uint64 updateAt = 4; 
}

message EraProcessData {
  uint64 era = 1;
  uint64 totalNodesCount = 2;      // total nodes count need to be processed
  uint64 processedNodesCount = 3;  // accumulated processed nodes count
  uint64 startAt = 4; 
  uint64 updateAt = 5;
  string status = 6;
  cosmos.base.query.v1beta1.PageResponse pagination = 7;
}
