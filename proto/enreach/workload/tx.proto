syntax = "proto3";

package enreach.workload;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "enreach/workload/params.proto";
import "enreach/workload/workload.proto";
import "enreach/workload/workreport.proto";
import "enreach/workload/superior.proto";

option go_package = "enreach/x/workload/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams   (MsgUpdateParams  ) returns (MsgUpdateParamsResponse  );
  rpc SubmitWorkreports (MsgSubmitWorkreports) returns (MsgSubmitWorkreportsResponse);

  rpc UpdateWorkreportProcessBatchSize (MsgUpdateWorkreportProcessBatchSize) returns (MsgUpdateWorkreportProcessBatchSizeResponse);
  rpc UpdateHistoryEpochDataDepth (MsgUpdateHistoryEpochDataDepth) returns (MsgUpdateHistoryEpochDataDepthResponse);

  rpc CreateSuperior             (MsgCreateSuperior            ) returns (MsgCreateSuperiorResponse            );
  rpc UpdateSuperior             (MsgUpdateSuperior            ) returns (MsgUpdateSuperiorResponse            );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                          "authority";
  option           (amino.name) = "enreach/x/workload/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgSubmitWorkreports {
  option (cosmos.msg.v1.signer)   = "managerAccount";
  string managerAccount           = 1;
  uint64 epoch                    = 2;
  repeated NodeScore nodeScores   = 3;
}

message MsgSubmitWorkreportsResponse {
}

message MsgUpdateWorkreportProcessBatchSize {
  option (cosmos.msg.v1.signer)   = "signer";
  string signer                   = 1;
  uint64 batchSize                = 2;
}

message MsgUpdateWorkreportProcessBatchSizeResponse {
}

message MsgUpdateHistoryEpochDataDepth {
  option (cosmos.msg.v1.signer)   = "signer";
  string signer                   = 1;
  uint64 depth                    = 2;
}

message MsgUpdateHistoryEpochDataDepthResponse {
}


message MsgCreateSuperior {
  option (cosmos.msg.v1.signer) = "signer";
  string signer   = 1;
  string account  = 2;
}

message MsgCreateSuperiorResponse {}

message MsgUpdateSuperior {
  option (cosmos.msg.v1.signer) = "signer";
  string signer   = 1;
  string account  = 2;
}

message MsgUpdateSuperiorResponse {}